var fs=require('fs')
var sourcefolder='genxml/';
var outputfolder='genhtll/';
var booklst=fs.readFileSync('./pts.lst','utf8').replace(/\r\n/g,'\n').split('\n');

var lst=fs.readFileSync(outputfolder+'/ptsmul.lst','utf8').replace(/\r\n/g,'\n').split('\n');

//var footnotes=require('./data/footpg1.json'); //generated by footpgcsv2json.js
/*TODO
check if all footnote consumed by text
*/
var possiblefn=[];
var wrongpid=[];
var filenow="";
var page=0,book=0,fnid=1;
var foundfncount=0;

var dnstarts={"1:1":"d1","1:47":"d2","1:87":"d3","1:111":"d4","1:127":"d5","1:150":"d6",
"1:159":"d7","1:161":"d8","1:178":"d9","1:204":"d10","1:211":"d11","1:224":"d12",
"1:235":"d13","2:1":"d14","2:55":"d15","2:72":"d16","2:169":"d17","2:200":"d18",
"2:220":"d19","2:253":"d20","2:263":"d21","2:290":"d22","2:316":"d23","3:1":"d24",
"3:36":"d25","3:58":"d26","3:80":"d27","3:99":"d28","3:117":"d29","3:142":"d30","3:180":"d31",
"3:194":"d32","3:207":"d33","3:272":"d34"}

var splitout=[],lastsplitfile="";
savesplitfile=function(fn) {
	if (lastsplitfile) {
		console.log('save',lastsplitfile)
		fs.writeFileSync(outputfolder+lastsplitfile+'.txt',splitout.join('\n'),'utf8');
		splitout=[];
	}
	lastsplitfile=fn;
}

splitdn=function(arr,bk) {
	for (var i in arr) {
		if (arr[i].substring(0,1)=='~') {
			m=arr[i].match(/~(\d+)\.(\d+)/);
			pb=parseInt(m[2],10);
			var dseq=dnstarts[bk+':'+pb];
			if (dseq) {
				savesplitfile(dseq);
			}
		}
		splitout.push(arr[i]);
	}
	savesplitfile();
}
var nextmn=1;
splitmn=function(arr,bk) {
	for (var i in arr) {
		s=arr[i].trim();
		n=parseInt(s,10)
		if (s.length-1==n.toString().length && n==nextmn) {
			savesplitfile('m'+n);
			nextmn++;
		}	
		splitout.push(arr[i]);
	}
	savesplitfile();
}
var nextsn=1;
splitsn=function(arr,bk) {
	for (var i in arr) {
		idx=arr[i].indexOf(' BOOK ');
		if (idx>-1){
			savesplitfile('s'+nextsn);
			nextsn++;
		}	
		splitout.push(arr[i]);
	}
	savesplitfile();
}
var nextan=1;
splitan=function(arr,bk) {
	for (var i in arr) {
		idx=arr[i].indexOf('-NIPÄ€TA');
		if (idx>-1){
			savesplitfile('a'+nextan);
			nextan++;
		}	
		splitout.push(arr[i]);
	}
	savesplitfile();
}
splitfile=function(f){
/* different stragegy to split */
	var arr=fs.readFileSync(sourcefolder+f,'utf8').replace(/\r\n/g,'\n').split('\n');

	var bk=parseInt(f.substring(2),10);
	if (f[0]=='d')      splitdn(arr,bk);
	else if (f[0]=='m') splitmn(arr,bk);
	else if (f[0]=='s') splitsn(arr,bk);
	else if (f[0]=='a') splitan(arr,bk);
}
dofile=function(f){
	console.log('processing',f)
	var arr=fs.readFileSync(outputfolder+f,'utf8').replace(/\r\n/g,'\n').split('\n');
	var out=[];
	var lastpid=0;
	for (var i=0;i<arr.length;i++) {
		var line=arr[i];
		if (line.substring(0,2)=='~~') {
			book=parseInt(line.substring(2),10);
		} else if (line.substring(0,1)=='~') {
			page=parseInt(line.substring(1),10);
			fnid=1;
		}
		filenow=f;
		//parse foot note
		//line=parseFootnote(line,i);
		out.push(line);
	}
	fs.writeFileSync(outputfolder+f,out.join('\n'),'utf8');
	
}
booklst.map(function(file){splitfile(file)});
if (nextmn!=153) throw 'mn wrong'+nextsn
if (nextsn!=57) throw 'sn wrong'+nextsn
if (nextan!=12) throw 'an wrong'+nextan

//lst.map(function(file){dofile(file)});


//fs.writeFileSync('./error/possiblefn.json',possiblefn.join('\n'),'utf8')
//fs.writeFileSync('./error/wrongpid.json',wrongpid.join('\n'),'utf8')
//fs.writeFileSync('./error/nofootnote.json',nofootnote.join('\n'),'utf8')
//console.log('total foot note match',foundfncount)
//console.log('missing foot note',nofootnote.length	)
